volumes:
  postgres_data:

services:
  app:
    stdin_open: true
    tty: true
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://${DB_USER}:${DB_PASSWORD}@db/${DB_DATABASE}"
      DJANGO_MANAGEPY_MIGRATE: "off"
      DJANGO_MANAGEPY_COLLECTSTATIC: "on"
      DB_HOST: db
      MEDIA_ROOT: "/media/app/"
    build:
      context: .
      dockerfile: "${DOCKER_FILE}"
    links:
      - db:db
    depends_on:
      - db
      - memcached
    ports:
      - "${PROD_HOST:-127.0.0.1}:${PROD_PORT}:8000"
      - "127.0.0.1:${JUPYTER_PORT}:8800"
    volumes:
      - ./media:/media/app/
      - ./docker/docker-entrypoint.sh:/app/docker/docker-entrypoint.sh
      - ./:/app/
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mainnet


  db:
    env_file:
      - .env
    environment:
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    restart: always
    image: postgres:17-alpine
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mainnet

networks:
  mainnet:
    driver: bridge
